{"version":3,"sources":["SortingVisualizer/components/Slider.js","SortingVisualizer/components/Button.js","SortingVisualizer/algorithms.js","SortingVisualizer/SortingVisualizer.js","SortingVisualizer/components/Header.js","SortingVisualizer/components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Slider","text","min","max","onResize","useState","value","setValue","onChange","e","target","className","type","step","onMouseUp","defaultProps","Button","onClick","mergeSort","array","animations","tempArray","slice","mergeSortRecursive","length","first","last","middle","Math","floor","k","i","j","push","Merge","quickSort","stack","pop","pivotIndex","partition","quickSortIterative","pivot","index","temp","tempSwap","heapify","left","right","minIndex","swap","indexOne","indexTwo","SortingVisualizer","setArray","numOfItems","setNumOfItems","createArray","getRandomInt","console","log","random","animate","arrayItems","document","getElementsByClassName","detail","itemOneIdx","itemTwoIdx","heightOne","heightTwo","color","itemOneStyle","style","itemTwoStyle","setTimeout","backgroundColor","height","num","map","idx","width","margin","current","algorithms","Header","Footer","href","class","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6e241e86.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from \"react\"\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Slider = ({text,min,max,onResize}) => {\r\n\r\n    const [value, setValue] = useState(100)\r\n    \r\n    const onChange =(e) => {\r\n        setValue(e.target.value)\r\n        onResize(e)\r\n    }\r\n\r\n    return (\r\n    <div className=\"slidecontainer\">\r\n        <div className=\"slide-value\">{text}{value}</div>\r\n        <input type=\"range\" min={min} max={max} value={value} step=\"5\" className=\"slider\" onChange={onChange} onMouseUp={onChange}/>\r\n        \r\n     </div>\r\n    )\r\n}\r\n\r\nSlider.defaultProps ={\r\n    min: 10,\r\n    max: 100\r\n}\r\n\r\nSlider.propTypes={\r\n    text: PropTypes.string,\r\n    min: PropTypes.number,\r\n    max: PropTypes.number\r\n}\r\n\r\n\r\nexport default Slider\r\n","import React from 'react'\r\n\r\nconst Button = ({text,onClick}) => {\r\n    return (\r\n        <div className=\"sort-button\">\r\n            <button className=\"sort-button-text\" onClick={onClick}>{text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button\r\n"," //MERGESORT\r\nexport function mergeSort(array){\r\n    const animations= [];\r\n    const tempArray = array.slice();\r\n    mergeSortRecursive(array,0, array.length-1,tempArray,animations);\r\n    return animations;\r\n}\r\n\r\nfunction mergeSortRecursive(array,first,last,tempArray,animations){\r\n    if(first === last) return;\r\n    const middle = Math.floor((first+last)/2);\r\n    mergeSortRecursive(tempArray,first,middle,array,animations);\r\n    mergeSortRecursive(tempArray,middle+1,last,array,animations);\r\n    Merge(array,first,middle,last,tempArray,animations);\r\n}\r\n\r\nfunction Merge(array,first,middle,last,tempArray,animations){\r\n    let k = first;\r\n    let i = first;\r\n    let j = middle+1;\r\n    while (i<=middle && j<=last){\r\n        \r\n        animations.push(['current',i,j,0,0,'red']);\r\n\r\n        if(tempArray[i]<=tempArray[j]){\r\n            animations.push(['changeOne',k,i,tempArray[i],0,'red']);\r\n            animations.push(['current',i,j,0,0,'steelblue']);\r\n            array[k++]=tempArray[i++];\r\n        } else{\r\n            animations.push(['changeOne',k,j,tempArray[j],0,'red']);\r\n            animations.push(['current',i,j,0,0,'steelblue']);\r\n            array[k++]=tempArray[j++]\r\n        }\r\n\r\n    } \r\n    while(i<=middle){\r\n        animations.push(['current',i,i,0,0,'red']);\r\n        animations.push(['changeOne',k,i,tempArray[i],0,'red']);\r\n        animations.push(['current',i,i,0,0,'steelblue']);\r\n        array[k++]=tempArray[i++];\r\n\r\n    }\r\n    while(j<=last){\r\n        animations.push(['current',j,j,0,0,'red']);\r\n        animations.push(['changeOne',k,j,tempArray[j],0,'red']);\r\n        animations.push(['current',j,j,0,0,'steelblue']);\r\n        array[k++]=tempArray[j++];\r\n    }\r\n}\r\n//INSERTIONSORT\r\n//TO DO FIX LAST ELEMENT SWITCH\r\nexport const insertionSort = (array)=>{\r\n    const animations = [];\r\n    const tempArray = array.slice();\r\n    let length = array.length;\r\n    for(let i = 1; i<length;i++){\r\n        let current = tempArray[i];\r\n        let j = i-1;\r\n        animations.push(['current',i,i,0,0,'green']);\r\n\r\n        while(j >= 0 && tempArray[j]>current){\r\n            animations.push(['current',j,j+1,0,0,'red']);\r\n            animations.push(['swap',j+1,j,tempArray[j+1],tempArray[j],'red']);\r\n            animations.push(['current',j,j+1,0,0,'steelblue']);\r\n            animations.push(['current',i,i,0,0,'green']);\r\n            tempArray[j+1]= tempArray[j];\r\n            j--;\r\n        }\r\n        animations.push(['current',j+1,j+1,0,0,'steelblue']);\r\n        animations.push(['swap',i,j+1,current,tempArray[j+1],'red']);\r\n        tempArray[j+1]=current;\r\n    }\r\n    animations.push(['current',length-1,length-1,0,0,'steelblue']);\r\n    return animations;\r\n}\r\n\r\n//BUBBLESORT\r\nexport const bubbleSort = (array)=>{\r\n    const animations = [];\r\n    const tempArray = array.slice();\r\n    for(var i = 0; i < array.length; i++){\r\n     \r\n        for(var j = 0; j < ( array.length - i -1 ); j++){\r\n            animations.push(['current',j,j+1,0,0,'red']);\r\n            if(tempArray[j] > tempArray[j+1]){\r\n                var temp = tempArray[j];\r\n                animations.push(['swap',j,j+1,tempArray[j],tempArray[j+1],'red']);\r\n                tempArray[j] = tempArray[j + 1];\r\n                tempArray[j+1] = temp;\r\n          }\r\n          animations.push(['current',j,j+1,0,0,'steelblue']);\r\n        }\r\n      }\r\n    return animations;\r\n}\r\n\r\n//QUICKSORT\r\nexport const quickSort = (array)=>{\r\n    const animations = [];\r\n    const tempArray = array.slice();\r\n    quickSortIterative(tempArray, animations);\r\n    return animations;\r\n}\r\n\r\nfunction quickSortIterative(tempArray, animations){\r\n    let stack = [];\r\n    \r\n    stack.push(0);\r\n    stack.push(tempArray.length - 1);\r\n    \r\n\r\n    while(stack[stack.length - 1] >= 0){\r\n        \r\n    \tlet last = stack.pop();\r\n        let first = stack.pop();\r\n        \r\n        let pivotIndex = partition(tempArray, first, last, animations);\r\n\r\n        if (pivotIndex - 1 > first){\r\n        \tstack.push(first);\r\n            stack.push(pivotIndex - 1);\r\n\t\t}\r\n\r\n        if (pivotIndex + 1 < last){\r\n        \tstack.push(pivotIndex + 1);\r\n            stack.push(last);\r\n        }\r\n    }\r\n}\r\n\r\nfunction partition(tempArray, first, last, animations){\r\n    const pivot = tempArray[last];\r\n    let index = first;\r\n\r\n    for(let i = first; i<last; i++){\r\n        animations.push(['current',i,index,0,0,'red']);\r\n        if(tempArray[i] < pivot){ \r\n            animations.push(['swap',i,index,tempArray[i],tempArray[index],'red']);\r\n            var temp = tempArray[i];\r\n            tempArray[i]= tempArray[index];\r\n            tempArray[index]= temp;\r\n            animations.push(['current',i,index,0,0,'steelblue']);\r\n            index++; \r\n        }  \r\n        animations.push(['current',i,index,0,0,'steelblue']);\r\n    }\r\n    animations.push(['swap',last,index,tempArray[last],tempArray[index],'red']);\r\n    var tempSwap = tempArray[last];\r\n    tempArray[last]= tempArray[index];\r\n    tempArray[index] = tempSwap;\r\n    return index;\r\n}\r\n\r\n\r\n//HEAPSORT\r\nexport const heapSort = (array)=>{\r\n    const animations = [];\r\n    const tempArray = array.slice();\r\n    for (let i = Math.floor(array.length / 2) - 1; i >= 0; i--) {\r\n        heapify(tempArray, array.length, i , animations);\r\n    }\r\n    for (let j = array.length -1; j >=0 ; j--) {\r\n        swap(tempArray, 0, j, animations);\r\n        heapify(tempArray, j , 0, animations);\r\n      }\r\n    return animations;\r\n}\r\n\r\nfunction heapify(tempArray, length, index, animations){\r\n    let left = 2 * index; \r\n    let right = 2 * index + 1; \r\n    let minIndex =index;\r\n\r\n    if(left<length && right<length){\r\n        animations.push(['current',left,right,0,0,'red']);\r\n    } else if(left<length){\r\n        animations.push(['current',left,left,0,0,'red']);\r\n    } else if(right<length){\r\n        animations.push(['current',right,right,0,0,'red']);\r\n    }\r\n\r\n    if(left < length && tempArray[left] > tempArray[minIndex]){\r\n        minIndex = left;\r\n    }\r\n\r\n    if(right < length && tempArray[right] > tempArray[minIndex]){\r\n        minIndex = right;\r\n    }\r\n\r\n    if(left<length && right<length){\r\n        animations.push(['current',left,right,0,0,'steelblue']);\r\n    } else if(left<length){\r\n        animations.push(['current',left,left,0,0,'steelblue']);\r\n    } else if(right<length){\r\n        animations.push(['current',right,right,0,0,'steelblue']);\r\n    }\r\n\r\n    if(minIndex !== index){\r\n        swap(tempArray, index, minIndex, animations);\r\n        heapify(tempArray, length, minIndex, animations);\r\n    }\r\n\r\n}\r\nfunction swap(tempArray, indexOne, indexTwo, animations){\r\n    animations.push(['current',indexOne,indexTwo,0,0,'red']);\r\n    animations.push(['swap',indexOne,indexTwo,tempArray[indexOne],tempArray[indexTwo],'red']);\r\n    var temp = tempArray[indexOne];\r\n    tempArray[indexOne]= tempArray[indexTwo];\r\n    tempArray[indexTwo]= temp;\r\n    animations.push(['current',indexOne,indexTwo,0,0,'steelblue']);\r\n}\r\n\r\n//used for testing algorithms in the beginning\r\nexport const areArraysEqual=(a, b)=>{\r\n    if (a === b) return true;\r\n    if (a == null || b == null) return false;\r\n    if (a.length !== b.length) return false;\r\n  \r\n    for (var i = 0; i < a.length; ++i) {\r\n      if (a[i] !== b[i]) return false;\r\n    }\r\n    return true;\r\n  \r\n}","import React from 'react'\r\nimport { useState } from \"react\"\r\nimport Slider from './components/Slider';\r\nimport Button from './components/Button';\r\nimport * as algorithms from './algorithms';\r\n\r\nconst SortingVisualizer=() =>{\r\n\r\n    const [array, setArray] = useState([])\r\n    const [numOfItems,setNumOfItems] = useState(100)\r\n    \r\n    // Building the Array\r\n    const createArray = () =>{\r\n        let array =[]\r\n        for(let i =0; i< numOfItems; i++){\r\n            array.push(getRandomInt(10,600));\r\n        }\r\n        setArray(array)\r\n        console.log(\"Create Array\"+array.length+\" \"+numOfItems)\r\n    }\r\n\r\n    //Generate random number for the heights of the array items\r\n    const getRandomInt = (min, max) =>{\r\n        return Math.floor(Math.random() * (max - min) + min) \r\n    }\r\n    \r\n    // Updates the state of the number of items in the array\r\n    const changeNumOfItems = (e)=>{\r\n        let num = e.target.value\r\n        setNumOfItems(num)\r\n        createArray()\r\n        console.log(\"ChnageNum of Items\"+array.length+\" \"+numOfItems)\r\n    }\r\n\r\n    //Calls Merge sort from algorithms.js\r\n    function mergeSort(){\r\n        const animations = algorithms.mergeSort(array);\r\n        animate(animations);\r\n    }\r\n\r\n    //Calls bubble sort from algorithms.js\r\n    function bubbleSort() {\r\n        const animations = algorithms.bubbleSort(array);\r\n        animate(animations);\r\n    }\r\n\r\n    //Calls insertion sort from algorithms.js\r\n    const insertionSort =()=> {\r\n        const animations = algorithms.insertionSort(array);\r\n        animate(animations);\r\n    }\r\n\r\n    //Calls quick sort from algorithms.js\r\n    const quickSort =()=> {\r\n        const animations = algorithms.quickSort(array);\r\n        animate(animations);\r\n    }\r\n\r\n    //Calls heap sort from algorithms.js\r\n    const heapSort =()=> {\r\n        const animations = algorithms.heapSort(array);\r\n        animate(animations);\r\n    }\r\n\r\n    //Animation function that handells the chaning of colors and swapping of items\r\n    function animate(animations){\r\n        for(let i= 0;i< animations.length;i++){\r\n            const arrayItems =document.getElementsByClassName(\"array-item\");\r\n            const [detail,itemOneIdx,itemTwoIdx,heightOne,heightTwo,color] = animations[i];\r\n            const itemOneStyle = arrayItems[itemOneIdx].style;\r\n            const itemTwoStyle = arrayItems[itemTwoIdx].style;\r\n            if(detail ==='current'){\r\n                setTimeout(()=>{\r\n                    itemOneStyle.backgroundColor = color ;\r\n                    itemTwoStyle.backgroundColor = color;\r\n                }, i *10);\r\n            } else if(detail ==='swap'){\r\n                setTimeout(()=>{        \r\n                    itemOneStyle.height= `${heightTwo}px`;\r\n                    itemTwoStyle.height= `${heightOne}px`;\r\n                   }, i *10);\r\n            } else if(detail ==='changeOne'){\r\n                setTimeout(()=>{        \r\n                    itemOneStyle.height= `${heightOne}px`;\r\n                   }, i *10);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Commented out functions used for testing the algorithms\r\n\r\n\r\n    // const testAlgorithms =()=>{\r\n    //     for(let i=0; i<100; i++){\r\n    //         const testArray =[];\r\n    //         for(let j=0; j< getRandomInt(10,1000);j++){\r\n    //             testArray.push(getRandomInt(0,1000));\r\n    //         }\r\n    //         const sortedArray= testArray.sort((a,b)=>a - b);\r\n    //         const insertionArray = algorithms.insertionSort(testArray);\r\n    //         //<Button text={'Test Button'} onClick={testAlgorithms}/>\r\n    //         console.log(algorithms.areArraysEqual(sortedArray,insertionArray))\r\n    //     }\r\n\r\n    // }\r\n    // const printArray =()=>{\r\n    //     for(let i =0; i<array.length;i++){\r\n    //         console.log(array[i]);\r\n    //     }\r\n    //     console.log('---------------------');\r\n    // }\r\n\r\n    //creates inital array\r\n    if (array.length===0) {createArray()}\r\n\r\n\r\n    // returns the html\r\n     return(\r\n         <>\r\n         <div className=\"array-buttons\">\r\n             {/* Create New array button calls create array function */}\r\n            <div className=\"button-container\"><button className=\"button\" onClick={createArray}>Create New Array</button></div>\r\n            {/* Slider component made in slider.js */}\r\n            <Slider text={'Array Size: '} min={10} max={200} onResize={changeNumOfItems}/>\r\n         </div>\r\n         <div className=\"array-container\" >\r\n            <div className=\"array-items\">\r\n            {array.map((value,idx) =>(\r\n                <div \r\n                className=\"array-item\" \r\n                key={idx}\r\n                style ={{height: `${value}px`,width:`${80/numOfItems}%`,margin:`1px ${10/numOfItems}% 0 ${10/numOfItems}%`}}\r\n                >\r\n                </div>\r\n            ))}\r\n            </div>\r\n         </div>\r\n         <div className=\"sort-buttons\">\r\n             {/* Button componets made in a Button.js */}\r\n            <Button text={'Insertion Sort'} onClick={insertionSort}/>\r\n            <Button text={'Bubble Sort'} onClick={bubbleSort}/>\r\n            <Button text={'Merge Sort'} onClick={mergeSort}/>\r\n            <Button text={'Quick Sort'} onClick={quickSort}/>\r\n            <Button text={'Heap Sort'} onClick={heapSort}/>\r\n            {/* <Button text={'Print'} onClick={printArray}/> */}\r\n         </div>\r\n\r\n\r\n         </>\r\n     );\r\n }\r\nexport default SortingVisualizer\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div  className=\"header\">\r\n            \r\n            <div className=\"title\">Sorting Algorithms Visualizer</div>\r\n            <div className=\"myname\">Made by : Ian Wilkinson</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"contact-header\">Contact Me</div>\r\n            <a href=\"mailto:ianw6043@gmail.com\" className=\"social-link\">ianw6043@gmail.com  </a>\r\n            <a href=\"https://www.linkedin.com/in/ian-wilkinson-258499208\" className=\"social-link\">Linkedin</a>\r\n            <a href=\"https://github.com/ian6043\" class=\"social-link\">Github</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import SortingVisualizer from \"./SortingVisualizer/SortingVisualizer\";\nimport Header from \"./SortingVisualizer/components/Header\";\nimport Footer from \"./SortingVisualizer/components/Footer\";\n\nfunction App() {\n  return (\n    <>\n    <Header/>\n    <div className=\"container\">\n    <SortingVisualizer/>\n    </div>\n    <Footer/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}